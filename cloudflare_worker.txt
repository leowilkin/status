export default {
  async fetch(request, env) {
    const { pathname } = new URL(request.url);

    if (request.method === "GET" && pathname === "/status") {
      // Fetch the status from KV
      const status = await env.STATUS_KV.get("currentStatus");
      return new Response(JSON.stringify({ status: status || "No status set" }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    if (request.method === "POST" && pathname === "/status") {
      // Authenticate with a secret key in headers
      const apiKey = request.headers.get("x-api-key");
      if (apiKey !== env.API_KEY) {
        return new Response(JSON.stringify({ message: "Forbidden: Invalid API key" }), { status: 403 });
      }

      const { status } = await request.json();
      if (!status) {
        return new Response(JSON.stringify({ message: "Please provide a status" }), { status: 400 });
      }

      // Update the status in KV
      await env.STATUS_KV.put("currentStatus", status);
      return new Response(JSON.stringify({ message: "Status updated", status }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    return new Response("Not Found", { status: 404 });
  },
};
